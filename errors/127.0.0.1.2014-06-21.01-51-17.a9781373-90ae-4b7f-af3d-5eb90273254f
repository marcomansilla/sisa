(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Table' object has no attribute 'numero'"
p3
sS'layer'
p4
S'/home/marco/trabajo/experimental/web2py/applications/sisapretty/controllers/consultas.py'
p5
sS'code'
p6
S' # -*- coding: utf-8 -*-\n\n@auth.requires_login()\ndef certificados():\n\n    cliente=db(db.clientes.id==request.args(1)).select()\n    lugar=db(db.establecimientos.id==request.args(0)).select()\n    response.subtitle+=" Certificados del cliente "+cliente[0].nombre.capitalize()+" "+cliente[0].apellido.capitalize()+" /  "+lugar[0].nombre\n    certificados=db(db.certificados.establecimiento==request.args(0)).select()\n\n    db.certificados.establecimiento.default=request.args(0)\n    db.certificados.establecimiento.writable=False\n    db.certificados.establecimiento.readable=False\n    db.certificados.numero.requires=IS_NOT_IN_DB(db, \'certificados.numero\')\n    db.adicionales.certificado.readable=False\n    db.adicionales.certificado.writable=False\n    \n    nCertificado=SQLFORM(db.certificados)\n\n    if nCertificado.process().accepted:\n        db.cobros.insert(certificado=nCertificado.vars.id, importe=0.0, pagado=0.0)\n        db.adicionales.insert(certificado=nCertificado.vars.id)\n        redirect(URL(\'consultas\', \'certificados\', args=(request.args(0), request.args(1))))\n        session.flash=\'El certificado ha sido agregado\'\n        \n    elif nCertificado.errors:\n        response.flash=\'El certificado tiene errores\'\n        \n    return dict(certificados=certificados, nCertificado=nCertificado)\n\n@auth.requires_login()\ndef cobros():\n    cliente=db(db.clientes.id==request.args(0)).select()\n    response.subtitle+=" Cobros al cliente "+cliente[0].nombre.capitalize()+" "+cliente[0].apellido.capitalize()\n    cobros=db((db.certificados.establecimiento==db.establecimientos.id)&(db.cobros.certificado==db.certificados.id)&(db.establecimientos.cliente==request.args(0))).select()\n\n    return dict(cobros=cobros)\n    \n@auth.requires_login()\ndef establecimientos():\n\n    cliente=db(db.clientes.id==request.args(0)).select()\n    response.subtitle+=" Establecimientos del cliente "+cliente[0].nombre.capitalize()+" "+cliente[0].apellido.capitalize()\n\n    db.establecimientos.cliente.default=request.args(0)\n    db.establecimientos.cliente.writable=False\n    db.establecimientos.cliente.readable=False\n    \n    sucursales=db(db.establecimientos.cliente==request.args(0)).select()\n    \n    nSucursal=SQLFORM(db.establecimientos)\n\n    if nSucursal.process().accepted:\n        redirect(URL(\'consultas\',\'establecimientos\', args=(request.args(0))))\n        session.flash=\'Se ha registrado el nuevo establecimiento\'\n    elif nSucursal.errors:\n        response.flash=\'Por favor, revise los datos ingresados\'\n    \n    return dict(nSucursal=nSucursal, sucursales=sucursales)\n\n@auth.requires_login()\ndef imprimircertificado():\n    certificado=db((db.certificados.id==request.args(0))&(db.adicionales.certificado==db.certificados.id)&(db.certificados.establecimiento==db.establecimientos.id)&(db.clientes.id==db.establecimientos.cliente)).select()\n    return dict(certificado=certificado)\n\ndef actualizarCobro():\n    db.cobros.id.readable=False\n    db.cobros.numero.writable=False\n    cupon=SQLFORM(db.cobros, request.args(0))\n    \n    if cupon.process().accepted:\n        redirect(URL(\'consultas\',\'cobros\', args=(request.args(1))))\n        session.flash=\'Se ha actualizado el cupon\'\n    elif cupon.errors:\n        response.flash=\'Por favor verifique los datos\'\n        \n    return dict(cupon=cupon)\n\nresponse._vars=response._caller(actualizarCobro)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/marco/trabajo/experimental/web2py/gluon/restricted.py", line 221, in restricted\n    exec ccode in environment\n  File "/home/marco/trabajo/experimental/web2py/applications/sisapretty/controllers/consultas.py", line 79, in <module>\n  File "/home/marco/trabajo/experimental/web2py/gluon/globals.py", line 389, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/marco/trabajo/experimental/web2py/applications/sisapretty/controllers/consultas.py", line 68, in actualizarCobro\n    db.cobros.numero.writable=False\n  File "/home/marco/trabajo/experimental/web2py/gluon/dal.py", line 9051, in __getitem__\n    return ogetattr(self, str(key))\nAttributeError: \'Table\' object has no attribute \'numero\'\n'
p11
s.